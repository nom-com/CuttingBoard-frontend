[{"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\index.js":"1","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\reportWebVitals.js":"2","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\App.js":"3","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\Footer.js":"4","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\AuthContext.js":"5","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\GlobalState.js":"6","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\Nav.js":"7","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\UserAccountForm.js":"8","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Login.js":"9","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Landing.js":"10","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\ListItemLink.js":"11","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\actions.js":"12","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\Logout.js":"13","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\API.js":"14","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\LoginForm.js":"15","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\RecipeCreateEditForm.js":"16","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Favorites.js":"17","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Recipe.js":"18","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Admin.js":"19","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\UserAccount.js":"20","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Search.js":"21"},{"size":457,"mtime":1608587344002,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2135,"mtime":1609192500280,"results":"25","hashOfConfig":"23"},{"size":322,"mtime":1608587343997,"results":"26","hashOfConfig":"23"},{"size":1115,"mtime":1608587411945,"results":"27","hashOfConfig":"23"},{"size":1396,"mtime":1608587344008,"results":"28","hashOfConfig":"23"},{"size":1664,"mtime":1609192482160,"results":"29","hashOfConfig":"23"},{"size":8628,"mtime":1609182441204,"results":"30","hashOfConfig":"23"},{"size":636,"mtime":1609192482172,"results":"31","hashOfConfig":"23"},{"size":785,"mtime":1609192482168,"results":"32","hashOfConfig":"23"},{"size":963,"mtime":1608587343999,"results":"33","hashOfConfig":"23"},{"size":642,"mtime":1608587344010,"results":"34","hashOfConfig":"23"},{"size":488,"mtime":1609190324776,"results":"35","hashOfConfig":"23"},{"size":647,"mtime":1608769008780,"results":"36","hashOfConfig":"23"},{"size":2157,"mtime":1609190321104,"results":"37","hashOfConfig":"23"},{"size":6743,"mtime":1609192464767,"results":"38","hashOfConfig":"23"},{"size":176,"mtime":1609192482166,"results":"39","hashOfConfig":"23"},{"size":268,"mtime":1609192482175,"results":"40","hashOfConfig":"23"},{"size":164,"mtime":1609192482162,"results":"41","hashOfConfig":"23"},{"size":182,"mtime":1609192482180,"results":"42","hashOfConfig":"23"},{"size":167,"mtime":1609192482178,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u01klj",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\index.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\reportWebVitals.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\App.js",["91"],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\Footer.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\AuthContext.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\GlobalState.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\Nav.js",["92"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemLink from \"../components/ListItemLink\";\n// import AuthMenu from \"../components/AuthMenu\";\n// import { authContext } from \"../contexts/AuthContext\";\nimport { useAuthContext } from \"../utils/AuthContext\";\nimport Logout from \"../components/Logout\";\n\nconst Nav = () => {\n  const [authState, authDispatch] = useAuthContext();\n  return (\n    <Grid\n      container\n      direction='row'\n      justify='flex-start'\n      alignItems='center'\n      p={5}>\n      <Grid item>\n        <ListItemLink to='/' primary='Home' />\n      </Grid>\n      <Grid item>\n        <ListItemLink to='/what' primary='404TEST' />\n      </Grid>\n      {authState.username ? (\n        <Grid item>\n            <Logout/>\n        </Grid>\n      ) : (\n        <Grid item>\n          <ListItemLink to='/login' primary='Login' />\n        </Grid>\n      )}\n      <Grid item>\n        <ListItemLink to='/signup' primary='Signup' />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Nav;\n",["93","94"],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\UserAccountForm.js",["95"],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Login.js",["96","97","98","99"],"import React from \"react\";\nimport { useAuthContext } from \"../utils/AuthContext\";\nimport { LOGIN_USER, LOGOUT_USER } from \"../utils/actions\";\nimport LoginForm from \"../components/LoginForm\";\nimport Container from \"@material-ui/core/Container\";\nimport Logout from \"../components/Logout\";\n\nconst Landing = () => {\n\n  const [authState, authDispatch] = useAuthContext();\n\n  return (\n    <Container>\n      <div>\n        {authState.username ? (\n          <div>\n            Welcome back, {authState.username}\n          </div>\n        ) : (\n          <LoginForm/>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Landing;","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Landing.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\ListItemLink.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\actions.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\Logout.js",["100"],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\utils\\API.js",["101","102"],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\LoginForm.js",["103","104"],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\components\\RecipeCreateEditForm.js",["105"],"import React from \"react\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport API from \"../utils/API\";\n\nconst recipeSubmit = (\n  values,\n  { setSubmitting, resetForm, setFieldError, setStatus }\n) => {\n  setTimeout(() => {\n    // USERNAME IS UNIQUE, FINALIZE CALL TO API\n    alert(JSON.stringify(values, null, 2));\n    // resetForm();\n    // USERNAME EXISTS STOP SUBMISSION DON\"T CALL API\n    setSubmitting(false);\n  }, 1000);\n};\n\nconst RecipeForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  const recipeCategory = [\n    {\n      value: \"soup\",\n      label: \"Soup\",\n    },\n    {\n      value: \"pasta\",\n      label: \"Pasta\",\n    },\n    {\n      value: \"dessert\",\n      label: \"Dessert\",\n    },\n  ];\n\n  return (\n    <div className='page-body-content'>\n      <Paper>\n        <form\n          id='recipe-form'\n          style={{\n            maxWidth: 600,\n            margin: \"auto\",\n            marginTop: 30,\n            padding: 20,\n          }}\n          noValidate\n          autoComplete='off'\n          onSubmit={handleSubmit}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <Grid item>\n              <Typography variant='h2'>Create/Edit Recipe</Typography>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin='dense'\n                size='small'\n                error={touched.title && Boolean(errors.title)}\n                id='title'\n                label='Title'\n                value={values.title}\n                placeholder='Brown Butter Chicken'\n                helperText={touched.title && errors.title ? errors.title : \" \"}\n                fullWidth\n                onChange={handleChange}\n                onBlur={handleBlur}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant='outlined'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin='dense'\n                size='small'\n                error={touched.imageLocation && Boolean(errors.imageLocation)}\n                id='imageLocation'\n                label='Image URL'\n                value={values.imageLocation}\n                helperText={\n                  touched.imageLocation && errors.imageLocation\n                    ? errors.imageLocation\n                    : \" \"\n                }\n                fullWidth\n                onChange={handleChange}\n                onBlur={handleBlur}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant='outlined'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin='dense'\n                size='small'\n                error={touched.description && Boolean(errors.description)}\n                id='description'\n                label='Description'\n                multiline\n                rows={4}\n                placeholder='A delicious and savory take on the classic...'\n                value={values.description}\n                helperText={\n                  touched.description && errors.description\n                    ? errors.description\n                    : \" \"\n                }\n                fullWidth\n                onChange={handleChange}\n                onBlur={handleBlur}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant='outlined'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={values.isPublic}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    name='isPublic'\n                    inputProps={{ \"aria-label\": \"make public or private\" }}\n                  />\n                }\n                label={\n                  values.isPublic ? \"Recipe is public\" : \"Recipe is private\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                select\n                id='category'\n                name='category'\n                label='Recipe Category'\n                margin='dense'\n                variant='outlined'\n                error={touched.category && Boolean(errors.category)}\n                onChange={handleChange}\n                value={values.category}\n                helperText={\n                    touched.category && errors.category\n                      ? errors.category\n                      : \" \"\n                  }\n                fullWidth>\n                {recipeCategory.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid container item justify='flex-end' alignItems='flex-end'>\n              <Button\n                type='submit'\n                variant='outlined'\n                color='default'\n                disabled={isSubmitting}\n                endIcon={<Icon>send</Icon>}>\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n\nconst RecipeCreateEditForm = withFormik({\n  mapPropsToValues: ({\n    title,\n    imageLocation,\n    description,\n    isPublic,\n    category,\n  }) => {\n    return {\n      title: title || \"\",\n      imageLocation: imageLocation || \"\",\n      description: description || \"\",\n      isPublic: isPublic || true,\n      category: category || \"\",\n    };\n  },\n  validationSchema: Yup.object().shape({\n    title: Yup.string()\n      .min(5, \"Title must contain at least 5 characters\")\n      .required(\"Enter a recipe title\"),\n    imageLocation: Yup.string(),\n    description: Yup.string().required(\"Required\"),\n    isPublic: Yup.boolean(),\n    category: Yup.string().required(\"Select a recipe category\"),\n  }),\n  handleSubmit: recipeSubmit,\n})(RecipeForm);\n\nexport default RecipeCreateEditForm;\n","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Favorites.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Recipe.js",["106"],"import React from \"react\";\n\nconst dummyRecipeObj = {};\n\nconst Recipe = (props) => {\n\n  //  useEffect to API get by ID etc...\n  return (\n    <div className='page-body-content'>\n      <h1>Recipe ID: {props.match.params.id}</h1>\n    </div>\n  );\n};\n\nexport default Recipe;","A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Admin.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\UserAccount.js",[],"A:\\DEV\\Revature\\Projects\\cuttingboard-frontend\\src\\pages\\Search.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"107","line":17,"column":2},{"ruleId":"108","severity":1,"message":"109","line":10,"column":21,"nodeType":"110","messageId":"111","endLine":10,"endColumn":33},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":11},{"ruleId":"108","severity":1,"message":"117","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":20},{"ruleId":"108","severity":1,"message":"118","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":33},{"ruleId":"108","severity":1,"message":"119","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":9,"column":21,"nodeType":"110","messageId":"111","endLine":9,"endColumn":33},{"ruleId":"108","severity":1,"message":"120","line":8,"column":12,"nodeType":"110","messageId":"111","endLine":8,"endColumn":21},{"ruleId":"108","severity":1,"message":"121","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":3,"column":1,"nodeType":"124","endLine":29,"endColumn":3},{"ruleId":"108","severity":1,"message":"125","line":31,"column":11,"nodeType":"110","messageId":"111","endLine":31,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":40,"column":32,"nodeType":"128","messageId":"129","endLine":40,"endColumn":34},{"ruleId":"108","severity":1,"message":"116","line":14,"column":8,"nodeType":"110","messageId":"111","endLine":14,"endColumn":11},{"ruleId":"108","severity":1,"message":"130","line":3,"column":7,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[32m\"./App.css\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mUserAccountForm\u001b[39m from \u001b[32m\"./components/UserAccountForm\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mRecipeCreateEditForm\u001b[39m from \u001b[32m\"./components/RecipeCreateEditForm\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mFavorites\u001b[39m from \u001b[32m\"./pages/Favorites\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","no-unused-vars","'authDispatch' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'API' is defined but never used.","'LOGIN_USER' is defined but never used.","'LOGOUT_USER' is defined but never used.","'Logout' is defined but never used.","'authState' is assigned a value but never used.","'axios' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'handleFormUpdate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'dummyRecipeObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]