[{"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\index.js":"1","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\App.js":"2","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Landing.js":"4","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Login.js":"5","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\NewRecipe.js":"6","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Favorites.js":"7","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Admin.js":"8","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Recipe.js":"9","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Search.js":"10","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\ShoppingList.js":"11","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\UserAccount.js":"12","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\Footer.js":"13","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\Nav.js":"14","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\utils\\AuthContext.js":"15","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\utils\\GlobalState.js":"16","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\UserAccountForm.js":"17","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeGlanceFrame.js":"18","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\utils\\actions.js":"19","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\LoginForm.js":"20","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\FavoritesTable.js":"21","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeGlanceCard.js":"22","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\ListItemLink.js":"23","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\IngredientsList.js":"24","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\Logout.js":"25","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\recipe.service.js":"26","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\auth.service.js":"27","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\RecipeInstructions.js":"28","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\FinalSubmit.js":"29","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\BaseRecipe.js":"30","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\RecipeIngredients.js":"31","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\shoppinglist.service.js":"32","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\category.service.js":"33","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\ingredient.service.js":"34","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\api-url.js":"35","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\auth-header.js":"36"},{"size":472,"mtime":1609693924750,"results":"37","hashOfConfig":"38"},{"size":2250,"mtime":1609703680894,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1609693924757,"results":"40","hashOfConfig":"38"},{"size":1605,"mtime":1609693956915,"results":"41","hashOfConfig":"38"},{"size":531,"mtime":1609703700635,"results":"42","hashOfConfig":"38"},{"size":899,"mtime":1609693956918,"results":"43","hashOfConfig":"38"},{"size":1008,"mtime":1609693956913,"results":"44","hashOfConfig":"38"},{"size":175,"mtime":1609703680901,"results":"45","hashOfConfig":"38"},{"size":7401,"mtime":1609703700637,"results":"46","hashOfConfig":"38"},{"size":178,"mtime":1609703680903,"results":"47","hashOfConfig":"38"},{"size":1031,"mtime":1609693956921,"results":"48","hashOfConfig":"38"},{"size":193,"mtime":1609701574093,"results":"49","hashOfConfig":"38"},{"size":335,"mtime":1609693924743,"results":"50","hashOfConfig":"38"},{"size":1602,"mtime":1609693956903,"results":"51","hashOfConfig":"38"},{"size":1098,"mtime":1609693956934,"results":"52","hashOfConfig":"38"},{"size":2769,"mtime":1609693956936,"results":"53","hashOfConfig":"38"},{"size":11599,"mtime":1609693956911,"results":"54","hashOfConfig":"38"},{"size":7711,"mtime":1609703700633,"results":"55","hashOfConfig":"38"},{"size":784,"mtime":1609693956938,"results":"56","hashOfConfig":"38"},{"size":2572,"mtime":1609703700628,"results":"57","hashOfConfig":"38"},{"size":4904,"mtime":1609703680897,"results":"58","hashOfConfig":"38"},{"size":1962,"mtime":1609703700630,"results":"59","hashOfConfig":"38"},{"size":997,"mtime":1609693924744,"results":"60","hashOfConfig":"38"},{"size":4625,"mtime":1609703680899,"results":"61","hashOfConfig":"38"},{"size":515,"mtime":1609693956901,"results":"62","hashOfConfig":"38"},{"size":1727,"mtime":1609703700642,"results":"63","hashOfConfig":"38"},{"size":684,"mtime":1609693956924,"results":"64","hashOfConfig":"38"},{"size":6912,"mtime":1609693956907,"results":"65","hashOfConfig":"38"},{"size":1474,"mtime":1609693956905,"results":"66","hashOfConfig":"38"},{"size":9728,"mtime":1609693956904,"results":"67","hashOfConfig":"38"},{"size":10927,"mtime":1609693956906,"results":"68","hashOfConfig":"38"},{"size":1258,"mtime":1609703680907,"results":"69","hashOfConfig":"38"},{"size":808,"mtime":1609693956925,"results":"70","hashOfConfig":"38"},{"size":1202,"mtime":1609693956926,"results":"71","hashOfConfig":"38"},{"size":63,"mtime":1609703700639,"results":"72","hashOfConfig":"38"},{"size":212,"mtime":1609693956923,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fb101u",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\index.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\App.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Landing.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Login.js",["155","156"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\NewRecipe.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Favorites.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Admin.js",[],["157","158"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Recipe.js",["159"],"import React, { useEffect, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RecipeService from \"../services/recipe.service\";\r\nimport { SET_CURRENT_RECIPE, SET_FAVORITES } from \"../utils/actions\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\n// const correctDummyRecipeObj = {\r\n//     id: 6,\r\n//     imageLocation: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-190621-homemade-pita-0144-portrait-pf-1567692673.jpg\",\r\n//     title: \"Pita\",\r\n//     description: \"Round pita disks\",\r\n//     publicRecipe: true,\r\n//     ingredients: [\r\n//         {\r\n//             id: 16,\r\n//             amount: {\r\n//                 id: 17,\r\n//                 amount: \"1 clove crushed\",\r\n//                 ingredient: {\r\n//                     id: 1,\r\n//                     ingredient: \"Garlic\"\r\n//                 }\r\n//             }\r\n//         },\r\n//         {\r\n//             id: 15,\r\n//             amount: {\r\n//                 id: 16,\r\n//                 amount: \"2 tbsp\",\r\n//                 ingredient: {\r\n//                     id: 2,\r\n//                     ingredient: \"Salt\"\r\n//                 }\r\n//             }\r\n//         },\r\n//         {\r\n//             id: 14,\r\n//             amount: {\r\n//                 id: 15,\r\n//                 amount: \"4 cups\",\r\n//                 ingredient: {\r\n//                     id: 3,\r\n//                     ingredient: \"Flour\"\r\n//                 }\r\n//             }\r\n//         }\r\n//     ],\r\n//     instructions: [\r\n//         {\r\n//             id: 8,\r\n//             step: {\r\n//                 id: 6,\r\n//                 step: \"knead until smooth\"\r\n//             },\r\n//             stepOrder: 1\r\n//         },\r\n//         {\r\n//             id: 9,\r\n//             step: {\r\n//                 id: 7,\r\n//                 step: \"let rest for 45-90 min\"\r\n//             },\r\n//             stepOrder: 2\r\n//         },\r\n//         {\r\n//             id: 10,\r\n//             step: {\r\n//                 id: 8,\r\n//                 step: \"punch down dough\"\r\n//             },\r\n//             stepOrder: 3\r\n//         },\r\n//         {\r\n//             id: 11,\r\n//             step: {\r\n//                 id: 9,\r\n//                 step: \"spread dough out and cut into circles, place each on a greased cookie sheet\"\r\n//             },\r\n//             stepOrder: 4\r\n//         },\r\n//         {\r\n//             id: 12,\r\n//             step: {\r\n//                 id: 10,\r\n//                 step: \"bake at 375 for 27-30 min\"\r\n//             },\r\n//             stepOrder: 5\r\n//         }\r\n//     ],\r\n//     category: {\r\n//         id: 1,\r\n//         category: \"Bread\"\r\n//     }\r\n// }\r\n\r\n//Displays a chosen Recipe with id matching www.url.com/recipe/{id}\r\nconst Recipe = (props) => {\r\n  //Contains all Relevant Data for Recipe Display\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  //Contains Bool for whether Recipe is one of your favorites or not\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  //Loads the list of user's favorites\r\n  const setFavorites = () => {\r\n    RecipeService.getFavoriteRecipes()\r\n      .then(res => {\r\n        console.log(res.data);\r\n        res.status === 200 && dispatch({\r\n          type: SET_FAVORITES,\r\n          favorites: res.data,\r\n        })\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Loads the RecipeData for Display\r\n  const handleLoadRecipe = (recipeId) => {\r\n    RecipeService.getRecipeById(recipeId)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        res.status === 200 && dispatch({\r\n          type: SET_CURRENT_RECIPE,\r\n          recipe: res.data\r\n        });\r\n        //console.log(RecipeService.getCurrentRecipe());\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Adds Favorite to your Favorites\r\n  const handleAddFavorite = (recipeId) => {\r\n    RecipeService.postFavoriteRecipe(recipeId)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        //Sets local state flag to true for Button Display\r\n        res.status === 201 && setIsFavorite(true);\r\n        console.log(isFavorite);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Recipe is already a favorite or server cannot be reached.\");\r\n      });\r\n  };\r\n\r\n  //Removes Favorite from your Favorites\r\n  const handleRemoveFavorite = (recipeId) => {\r\n    RecipeService.deleteFavoriteRecipe(recipeId)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        //Sets local state flag to true for Button Display\r\n        res.status === 204 && setIsFavorite(false);\r\n        console.log(isFavorite);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n\r\n  //  useEffect to API get by ID etc...\r\n  useEffect(() => {\r\n    //Get {id} from URL\r\n    const recipeId = props.match.params.id;\r\n\r\n    //Load the Recipe from Back-end\r\n    handleLoadRecipe(recipeId);\r\n\r\n    //Set the State's list of Favorites so we can check if this recipe is a favorite already\r\n    setFavorites();\r\n\r\n    //Check to see if current recipe is in our favorites\r\n\r\n  }, [] /*Empty Array Ensures Side Effects only occur once*/\r\n  );\r\n\r\n  //When finished, pull apart created JSON obj and display each component\r\n  return (\r\n    <div className='page-body-content'>\r\n      <Paper>\r\n        {console.log(state.currentRecipe)}\r\n        {state.currentRecipe ?\r\n          <React.Fragment>\r\n            <h1>{state.currentRecipe.title}</h1>\r\n            <h3>Recipe #{state.currentRecipe.id}</h3>\r\n            <strong>Category:</strong> {state.currentRecipe.category.category}\r\n            <br /><img style={{ width: 30 + '%' }} src={\"http://images.generictech.org/\" + state.currentRecipe.imageLocation} />\r\n            <br />\r\n            {isFavorite ? (\r\n              <Button onClick={() =>    { handleRemoveFavorite(props.match.params.id); console.log(\"isFavorite: \" + isFavorite); }} startIcon={<StarIcon />}> Unfavorite</Button>\r\n            ) : (\r\n                <Button onClick={() =>  { handleAddFavorite(props.match.params.id); console.log(\"isFavorite: \" + isFavorite); }} startIcon={<StarBorderIcon />}> Favorite</Button>\r\n              )}\r\n            <h1>Description:</h1>\r\n            {state.currentRecipe.description}\r\n            <div id=\"ingredients-list\">\r\n              <h1>Ingredients</h1>\r\n              <ul>\r\n                {state.currentRecipe.ingredients.map(ingredient => (\r\n                  <li key={ingredient.amount.ingredient.ingredient}>\r\n                    {ingredient.amount.amount} {ingredient.amount.ingredient.ingredient}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div id=\"instructions-list\">\r\n              <h1>Instructions</h1>\r\n              <ol>\r\n                {state.currentRecipe.instructions.map(instruction => (\r\n                  <li key={instruction.stepOrder}>\r\n                    {instruction.step.step}\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n              <br /><br />\r\n            </div>\r\n          </React.Fragment>\r\n          : <div>\r\n            No Recipes Found.\r\n          </div>\r\n        }\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\Search.js",["160","161","162","163"],"import React from \"react\";\r\n\r\nconst Search = () => {\r\n\r\n  return (\r\n    <div className='page-body-content'>\r\n      <h1>Search</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\ShoppingList.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\pages\\UserAccount.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\Footer.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\Nav.js",["164"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\utils\\AuthContext.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\utils\\GlobalState.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\UserAccountForm.js",["165","166"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeGlanceFrame.js",["167"],"import RecipeGlanceCard from \"../components/RecipeGlanceCard\";\r\nimport React, {useEffect} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport { SET_RECOMMENDED_RECIPES, LOADING } from \"../utils/actions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RecipeService from \"../services/recipe.service\";\r\n\r\nconst dummyRecipeArray = [{\r\n  id: 6,\r\n  imageLocation: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-190621-homemade-pita-0144-portrait-pf-1567692673.jpg\",\r\n  title: \"Pita\",\r\n  description: \"Round pita disks\",\r\n  publicRecipe: true,\r\n  ingredients: [\r\n      {\r\n          id: 16,\r\n          amount: {\r\n              id: 17,\r\n              amount: \"1 clove crushed\",\r\n              ingredient: {\r\n                  id: 1,\r\n                  ingredient: \"Garlic\"\r\n              }\r\n          }\r\n      },\r\n      {\r\n          id: 15,\r\n          amount: {\r\n              id: 16,\r\n              amount: \"2 tbsp\",\r\n              ingredient: {\r\n                  id: 2,\r\n                  ingredient: \"Salt\"\r\n              }\r\n          }\r\n      },\r\n      {\r\n          id: 14,\r\n          amount: {\r\n              id: 15,\r\n              amount: \"4 cups\",\r\n              ingredient: {\r\n                  id: 3,\r\n                  ingredient: \"Flour\"\r\n              }\r\n          }\r\n      }\r\n  ],\r\n  instructions: [\r\n      {\r\n          id: 8,\r\n          step: {\r\n              id: 6,\r\n              step: \"knead until smooth\"\r\n          },\r\n          stepOrder: 1\r\n      },\r\n      {\r\n          id: 9,\r\n          step: {\r\n              id: 7,\r\n              step: \"let rest for 45-90 min\"\r\n          },\r\n          stepOrder: 2\r\n      },\r\n      {\r\n          id: 10,\r\n          step: {\r\n              id: 8,\r\n              step: \"punch down dough\"\r\n          },\r\n          stepOrder: 3\r\n      },\r\n      {\r\n          id: 11,\r\n          step: {\r\n              id: 9,\r\n              step: \"spread dough out and cut into circles, place each on a greased cookie sheet\"\r\n          },\r\n          stepOrder: 4\r\n      },\r\n      {\r\n          id: 12,\r\n          step: {\r\n              id: 10,\r\n              step: \"bake at 375 for 27-30 min\"\r\n          },\r\n          stepOrder: 5\r\n      }\r\n  ],\r\n  category: {\r\n      id: 1,\r\n      category: \"Bread\"\r\n  }\r\n},\r\n{\r\n  id: 7,\r\n  imageLocation: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-190621-homemade-pita-0144-portrait-pf-1567692673.jpg\",\r\n  title: \"Pita\",\r\n  description: \"Round pita disks\",\r\n  publicRecipe: true,\r\n  ingredients: [\r\n      {\r\n          id: 16,\r\n          amount: {\r\n              id: 17,\r\n              amount: \"1 clove crushed\",\r\n              ingredient: {\r\n                  id: 1,\r\n                  ingredient: \"Garlic\"\r\n              }\r\n          }\r\n      },\r\n      {\r\n          id: 15,\r\n          amount: {\r\n              id: 16,\r\n              amount: \"2 tbsp\",\r\n              ingredient: {\r\n                  id: 2,\r\n                  ingredient: \"Salt\"\r\n              }\r\n          }\r\n      },\r\n      {\r\n          id: 14,\r\n          amount: {\r\n              id: 15,\r\n              amount: \"4 cups\",\r\n              ingredient: {\r\n                  id: 3,\r\n                  ingredient: \"Flour\"\r\n              }\r\n          }\r\n      }\r\n  ],\r\n  instructions: [\r\n      {\r\n          id: 8,\r\n          step: {\r\n              id: 6,\r\n              step: \"knead until smooth\"\r\n          },\r\n          stepOrder: 1\r\n      },\r\n      {\r\n          id: 9,\r\n          step: {\r\n              id: 7,\r\n              step: \"let rest for 45-90 min\"\r\n          },\r\n          stepOrder: 2\r\n      },\r\n      {\r\n          id: 10,\r\n          step: {\r\n              id: 8,\r\n              step: \"punch down dough\"\r\n          },\r\n          stepOrder: 3\r\n      },\r\n      {\r\n          id: 11,\r\n          step: {\r\n              id: 9,\r\n              step: \"spread dough out and cut into circles, place each on a greased cookie sheet\"\r\n          },\r\n          stepOrder: 4\r\n      },\r\n      {\r\n          id: 12,\r\n          step: {\r\n              id: 10,\r\n              step: \"bake at 375 for 27-30 min\"\r\n          },\r\n          stepOrder: 5\r\n      }\r\n  ],\r\n  category: {\r\n      id: 1,\r\n      category: \"Bread\"\r\n  }\r\n},\r\n{\r\n  id: 9,\r\n  imageLocation: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-190621-homemade-pita-0144-portrait-pf-1567692673.jpg\",\r\n  title: \"Pita\",\r\n  description: \"Round pita disks\",\r\n  publicRecipe: true,\r\n  ingredients: [\r\n      {\r\n          id: 16,\r\n          amount: {\r\n              id: 17,\r\n              amount: \"1 clove crushed\",\r\n              ingredient: {\r\n                  id: 1,\r\n                  ingredient: \"Garlic\"\r\n              }\r\n          }\r\n      },\r\n      {\r\n          id: 15,\r\n          amount: {\r\n              id: 16,\r\n              amount: \"2 tbsp\",\r\n              ingredient: {\r\n                  id: 2,\r\n                  ingredient: \"Salt\"\r\n              }\r\n          }\r\n      },\r\n      {\r\n          id: 14,\r\n          amount: {\r\n              id: 15,\r\n              amount: \"4 cups\",\r\n              ingredient: {\r\n                  id: 3,\r\n                  ingredient: \"Flour\"\r\n              }\r\n          }\r\n      }\r\n  ],\r\n  instructions: [\r\n      {\r\n          id: 8,\r\n          step: {\r\n              id: 6,\r\n              step: \"knead until smooth\"\r\n          },\r\n          stepOrder: 1\r\n      },\r\n      {\r\n          id: 9,\r\n          step: {\r\n              id: 7,\r\n              step: \"let rest for 45-90 min\"\r\n          },\r\n          stepOrder: 2\r\n      },\r\n      {\r\n          id: 10,\r\n          step: {\r\n              id: 8,\r\n              step: \"punch down dough\"\r\n          },\r\n          stepOrder: 3\r\n      },\r\n      {\r\n          id: 11,\r\n          step: {\r\n              id: 9,\r\n              step: \"spread dough out and cut into circles, place each on a greased cookie sheet\"\r\n          },\r\n          stepOrder: 4\r\n      },\r\n      {\r\n          id: 12,\r\n          step: {\r\n              id: 10,\r\n              step: \"bake at 375 for 27-30 min\"\r\n          },\r\n          stepOrder: 5\r\n      }\r\n  ],\r\n  category: {\r\n      id: 1,\r\n      category: \"Bread\"\r\n  }\r\n}];\r\n\r\nconst RecipeGlanceFrame = () => {\r\n\r\n    \r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const setRecommended = () => {\r\n    RecipeService.getAllRecommendedRecipes()\r\n      .then(res => {\r\n        console.log(res.data);\r\n        res.status === 200 && dispatch({\r\n          type: SET_RECOMMENDED_RECIPES,\r\n          recipes: res.data\r\n        });\r\n        //console.log(RecipeService.getCurrentRecipe());\r\n      })\r\n      .catch(err => {\r\n          console.log(err);\r\n        });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setRecommended();\r\n  }, []);\r\n\r\n    return (\r\n        <div>\r\n            {state.loading ? (\r\n                <Grid container item direction='row' justify='center'>\r\n                <Grid item>\r\n                    <CircularProgress color='secondary' />\r\n                </Grid>\r\n                </Grid>\r\n            ) : (\r\n            <Grid\r\n            container\r\n            direction='row'\r\n            justify='flex-start'\r\n            alignItems='center'\r\n            p={5}>{\r\n                state.recommendedRecipes.length > 0 ? state.recommendedRecipes.map(recipeObj => (\r\n                    <Grid item key={recipeObj.id}>\r\n                        <RecipeGlanceCard recipeDetail={recipeObj}/>\r\n                    </Grid>\r\n                )) : (\r\n                    <div>\r\n                        No Recipes Found.\r\n                    </div>\r\n                )\r\n            }\r\n            </Grid>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeGlanceFrame;","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\utils\\actions.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\LoginForm.js",["168","169","170","171"],"import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {SET_USER} from \"../utils/actions\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoginForm = () => {\r\n\r\n  //State Storage\r\n  const [state, dispatch] = useStoreContext();\r\n  //Temporary storage for the user form\r\n  const [userForm, setUserForm] = useState({username: \"\", password: \"\"});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n\r\n    //Updated Login Function\r\n    const handleLogin = (username, password) => {\r\n        AuthService.login(username, password)\r\n          .then(res => {\r\n            console.log(res);\r\n            res.status === 200 && AuthService.setCurrentUser({...res.data, accessToken: res.headers.token }) \r\n            res.status === 200 && dispatch({\r\n              type: SET_USER,\r\n              user: res.data\r\n            });\r\n            console.log(AuthService.getCurrentUser())\r\n          })\r\n          .catch(err => {\r\n              console.log(err);\r\n              //Displays Error Message\r\n              setErrorMessage(\"Incorrect Username or Password\");\r\n            });\r\n      };\r\n\r\n  //Invokes Login Helper Function\r\n  const handleSubmit = (event) => {\r\n    //Disables Page Reload onSubmit\r\n    event.preventDefault();\r\n    handleLogin(userForm.username, userForm.password);\r\n    history.replace(\"/\");\r\n\r\n    const handleFormUpdate = (event, value) => {\r\n        setUserForm({...userForm, value: event.target.value})\r\n    }\r\n}\r\n  return (\r\n    <div id=\"login-form\">\r\n        <form>\r\n            <h1>Login</h1>\r\n            {(errorMessage != \"\") ? (<div className=\"error-message\">{errorMessage}</div>) : \"\"}\r\n            <div className=\"form-group\">\r\n                <TextField name=\"username\" id=\"username\" value={userForm.username} onChange={e => setUserForm({...userForm, username: e.target.value})}label=\"Username\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <TextField type=\"password\" name=\"password\" id=\"password\" value={userForm.password} onChange={e => setUserForm({...userForm, password: e.target.value})} label=\"Password\"/>\r\n            </div>\r\n            <Button\r\n                onClick={handleSubmit}>\r\n                Login\r\n            </Button>\r\n        </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\FavoritesTable.js",["172","173"],"import React, { useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TrashIcon from \"@material-ui/icons/Delete\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport { SET_FAVORITES, LOADING } from \"../utils/actions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst FavoritesTable = () => {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const favoriteRecipes = [\r\n    {\r\n      id: 0,\r\n      img: \"https://via.placeholder.com/100\",\r\n      title: \"test\",\r\n      category: \"soup\",\r\n      public: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      img: \"https://via.placeholder.com/100\",\r\n      title: \"test\",\r\n      category: \"pasta\",\r\n      public: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      img: \"https://via.placeholder.com/100\",\r\n      title: \"test\",\r\n      category: \"dessert\",\r\n      public: true,\r\n    },\r\n  ];\r\n\r\n  //\r\n  const setFavorites = () => {\r\n    dispatch({ type: LOADING, loading: true });\r\n    setTimeout(function () {\r\n      dispatch({\r\n        type: SET_FAVORITES,\r\n        favorites: favoriteRecipes,\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  // WILL BE AN API CALL\r\n  const removeFavorite = id => {\r\n    const shorterFavs = state.favorites.filter(fav => fav.id !== id);\r\n    dispatch({\r\n      type: SET_FAVORITES,\r\n      favorites: shorterFavs,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFavorites();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.loading ? (\r\n        <Grid container item direction='row' justify='center'>\r\n          <Grid item>\r\n            <CircularProgress color='secondary' />\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid container item direction='row' justify='center'>\r\n          {state.favorites.length > 0 ? (\r\n            <Grid item xs={12}>\r\n              <Fade in={!state.loading}>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label='simple table'>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Image</TableCell>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Public/Private</TableCell>\r\n                        <TableCell>Actions</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {state.favorites.map(recipe => (\r\n                        <TableRow key={recipe.id}>\r\n                          <TableCell component='th' scope='row'>\r\n                            <Tooltip title='View Recipe'>\r\n                              <Link to={`/recipe/${recipe.id}`}>\r\n                                <img src={recipe.img} alt='placeholder' />\r\n                              </Link>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                          <TableCell>{recipe.title}</TableCell>\r\n                          <TableCell>{recipe.category}</TableCell>\r\n                          <TableCell>\r\n                            {recipe.public ? \"public\" : \"private\"}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Tooltip title='Remove from Favorites'>\r\n                              <IconButton\r\n                                onClick={() => removeFavorite(recipe.id)}>\r\n                                <TrashIcon />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Fade>\r\n            </Grid>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Grid item>\r\n                <Typography variant='subtitle1'>\r\n                  no favorite recipes found\r\n                </Typography>\r\n                {/* TO BE DELETED */}\r\n                <button onClick={() => setFavorites()}>\r\n                  POPULATE DUMMY DATA\r\n                </button>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FavoritesTable;\r\n","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeGlanceCard.js",["174","175","176","177","178","179","180","181","182","183"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeGlanceCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {props.recipeDetail.category.category[0]}{props.recipeDetail.category.category[1]}{props.recipeDetail.category.category[2]}\r\n          </Avatar>\r\n        }\r\n        title={props.recipeDetail.title}\r\n        subheader={props.recipeDetail.category.category}\r\n      />\r\n      <Link to={`/recipe/${props.recipeDetail.id}`}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={\"http://images.generictech.org/\" + props.recipeDetail.imageLocation}\r\n        title={props.recipeDetail.title}\r\n      />\r\n      </Link>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.recipeDetail.description}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\ListItemLink.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\IngredientsList.js",["184"],"import React, { useEffect } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteButton from \"@material-ui/icons/Delete\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport { SET_SHOPPING_LIST, LOADING } from \"../utils/actions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport default function CheckboxList() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const dummyShoppingListData = [\r\n    {\r\n      id: 0,\r\n      ingredientName: \"Garlic\",\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      ingredientName: \"Parmesan\",\r\n      checked: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      ingredientName: \"Salt\",\r\n      checked: false,\r\n    },\r\n  ];\r\n\r\n  const setShoppingList = () => {\r\n    dispatch({ type: LOADING, loading: true });\r\n    setTimeout(function () {\r\n      dispatch({\r\n        type: SET_SHOPPING_LIST,\r\n        shoppingList: dummyShoppingListData,\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  // WILL BE AN API CALL\r\n  const removeFromList = id => {\r\n    const shorterList = state.shoppingList.filter(item => item.id !== id);\r\n    dispatch({\r\n      type: SET_SHOPPING_LIST,\r\n      shoppingList: shorterList,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShoppingList();\r\n  }, []);\r\n\r\n  const handleToggle = value => () => {\r\n    value.checked = !value.checked;\r\n    const updateShoppingList = state.shoppingList.map(item =>\r\n      item.id === value.id ? value : item\r\n    );\r\n\r\n    dispatch({\r\n      type: SET_SHOPPING_LIST,\r\n      shoppingList: updateShoppingList,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.loading ? (\r\n        <Grid container item direction='row' justify='center'>\r\n          <Grid item>\r\n            <CircularProgress color='secondary' />\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid container item direction='row' justify='center'>\r\n          {state.shoppingList.length > 0 ? (\r\n            <Grid item xs={12}>\r\n              <Fade in={!state.loading}>\r\n                <List>\r\n                  {state.shoppingList.map((value, index) => (\r\n                    <ListItem\r\n                      key={value.id}\r\n                      role={undefined}\r\n                      dense\r\n                      button\r\n                      onClick={handleToggle(value)}>\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge='start'\r\n                          checked={value.checked}\r\n                          tabIndex={-1}\r\n                          disableRipple\r\n                          inputProps={{\r\n                            \"aria-labelledby\": `checkbox-list-label-${value.id}`,\r\n                          }}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        id={`checkbox-list-label-${value.id}`}\r\n                        primary={`${value.ingredientName}`}\r\n                      />\r\n                      <ListItemSecondaryAction>\r\n                        <Tooltip title='Delete from list'>\r\n                          <IconButton\r\n                            edge='end'\r\n                            aria-label='comments'\r\n                            onClick={() => removeFromList(value.id)}>\r\n                            <DeleteButton />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Fade>\r\n            </Grid>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Grid item>\r\n                <Typography variant='subtitle1'>\r\n                  No items found in your shopping list\r\n                </Typography>\r\n                {/* TO BE DELETED */}\r\n                <button onClick={() => setShoppingList()}>\r\n                  POPULATE DUMMY DATA\r\n                </button>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\Logout.js",["185"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\recipe.service.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\RecipeInstructions.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\FinalSubmit.js",["186","187","188","189"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\BaseRecipe.js",["190","191"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\components\\RecipeForms\\RecipeIngredients.js",["192"],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\shoppinglist.service.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\category.service.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\ingredient.service.js",[],"C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\api-url.js",["193"],"export default \"http://localhost:8080/cuttingboard/\";","C:\\Users\\danie\\DEV\\Revature\\projects\\CuttingBoard-frontend\\src\\services\\auth-header.js",[],{"ruleId":"194","severity":1,"message":"195","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":17},{"ruleId":"194","severity":1,"message":"198","line":7,"column":21,"nodeType":"196","messageId":"197","endLine":7,"endColumn":33},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":41,"column":14,"nodeType":"205","endLine":41,"endColumn":51},{"ruleId":"194","severity":1,"message":"206","line":4,"column":29,"nodeType":"196","messageId":"197","endLine":4,"endColumn":39},{"ruleId":"194","severity":1,"message":"207","line":14,"column":17,"nodeType":"196","messageId":"197","endLine":14,"endColumn":25},{"ruleId":"194","severity":1,"message":"208","line":18,"column":21,"nodeType":"196","messageId":"197","endLine":18,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":77,"column":6,"nodeType":"211","endLine":77,"endColumn":8,"suggestions":"212"},{"ruleId":"194","severity":1,"message":"207","line":8,"column":17,"nodeType":"196","messageId":"197","endLine":8,"endColumn":25},{"ruleId":"194","severity":1,"message":"213","line":51,"column":10,"nodeType":"196","messageId":"197","endLine":51,"endColumn":15},{"ruleId":"194","severity":1,"message":"214","line":54,"column":59,"nodeType":"196","messageId":"197","endLine":54,"endColumn":67},{"ruleId":"209","severity":1,"message":"215","line":59,"column":6,"nodeType":"211","endLine":59,"endColumn":8,"suggestions":"216"},{"ruleId":"194","severity":1,"message":"195","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":17},{"ruleId":"194","severity":1,"message":"213","line":12,"column":10,"nodeType":"196","messageId":"197","endLine":12,"endColumn":15},{"ruleId":"194","severity":1,"message":"217","line":43,"column":11,"nodeType":"196","messageId":"197","endLine":43,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":51,"column":28,"nodeType":"220","messageId":"221","endLine":51,"endColumn":30},{"ruleId":"194","severity":1,"message":"222","line":19,"column":8,"nodeType":"196","messageId":"197","endLine":19,"endColumn":21},{"ruleId":"209","severity":1,"message":"223","line":114,"column":6,"nodeType":"211","endLine":114,"endColumn":8,"suggestions":"224"},{"ruleId":"194","severity":1,"message":"225","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"226","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"227","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":12},{"ruleId":"194","severity":1,"message":"228","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":19},{"ruleId":"194","severity":1,"message":"229","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":16},{"ruleId":"194","severity":1,"message":"230","line":11,"column":8,"nodeType":"196","messageId":"197","endLine":11,"endColumn":18},{"ruleId":"194","severity":1,"message":"231","line":14,"column":8,"nodeType":"196","messageId":"197","endLine":14,"endColumn":20},{"ruleId":"194","severity":1,"message":"232","line":15,"column":8,"nodeType":"196","messageId":"197","endLine":15,"endColumn":17},{"ruleId":"194","severity":1,"message":"233","line":16,"column":8,"nodeType":"196","messageId":"197","endLine":16,"endColumn":22},{"ruleId":"194","severity":1,"message":"234","line":17,"column":8,"nodeType":"196","messageId":"197","endLine":17,"endColumn":20},{"ruleId":"209","severity":1,"message":"235","line":84,"column":6,"nodeType":"211","endLine":84,"endColumn":8,"suggestions":"236"},{"ruleId":"194","severity":1,"message":"213","line":8,"column":10,"nodeType":"196","messageId":"197","endLine":8,"endColumn":15},{"ruleId":"194","severity":1,"message":"206","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":18},{"ruleId":"194","severity":1,"message":"237","line":6,"column":8,"nodeType":"196","messageId":"197","endLine":6,"endColumn":12},{"ruleId":"194","severity":1,"message":"238","line":11,"column":9,"nodeType":"196","messageId":"197","endLine":11,"endColumn":14},{"ruleId":"194","severity":1,"message":"207","line":12,"column":17,"nodeType":"196","messageId":"197","endLine":12,"endColumn":25},{"ruleId":"194","severity":1,"message":"239","line":41,"column":5,"nodeType":"196","messageId":"197","endLine":41,"endColumn":15},{"ruleId":"209","severity":1,"message":"210","line":75,"column":6,"nodeType":"211","endLine":75,"endColumn":8,"suggestions":"240"},{"ruleId":"209","severity":1,"message":"241","line":89,"column":6,"nodeType":"211","endLine":89,"endColumn":8,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","endLine":1,"endColumn":64},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'authDispatch' is assigned a value but never used.","no-native-reassign",["246"],"no-negated-in-lhs",["247"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'dispatch' is assigned a value but never used.","'setRecipeArr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["248"],"'state' is assigned a value but never used.","'editForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRecommended'. Either include it or remove the dependency array.",["249"],"'handleFormUpdate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'RecipeService' is defined but never used.","React Hook useEffect has a missing dependency: 'setFavorites'. Either include it or remove the dependency array.",["250"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getShoppingList'. Either include it or remove the dependency array.",["251"],"'Grid' is defined but never used.","'debug' is assigned a value but never used.","'categoryId' is assigned a value but never used.",["252"],"React Hook useEffect has a missing dependency: 'getIngredients'. Either include it or remove the dependency array.",["253"],"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"254","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [getCategories]",{"range":"265","text":"266"},"Update the dependencies array to be: [setRecommended]",{"range":"267","text":"268"},"Update the dependencies array to be: [setFavorites]",{"range":"269","text":"270"},"Update the dependencies array to be: [getShoppingList]",{"range":"271","text":"272"},{"range":"273","text":"266"},"Update the dependencies array to be: [getIngredients]",{"range":"274","text":"275"},[2385,2387],"[getCategories]",[3844,3846],"[setRecommended]",[3259,3261],"[setFavorites]",[2625,2627],"[getShoppingList]",[2346,2348],[2864,2866],"[getIngredients]"]